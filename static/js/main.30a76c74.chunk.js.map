{"version":3,"sources":["Components/form/radiobutton.js","Components/form/checkBox.js","Components/form/SelectBox.js","Components/Charts/Scatter.js","util/firebase.js","Components/shareBtn/facebookShare.js","Components/axisAverrage/ScatterLineResult.js","Components/component/PartyImage.js","Components/axisAverrage/PrecentOfAnswered.js","Components/auth/Home.js","App.js","serviceWorker.js","index.js"],"names":["RadioButton","props","React","useState","value","setValue","index","ans","useEffect","id","className","title","FormControl","const","RadioGroup","aria-label","name","onChange","event","target","returnAnswer","answers","map","el","i","FormControlLabel","key","control","Radio","label","message","CheckBox","FormGroup","Checkbox","checked","returnAxisName","useStyles","makeStyles","theme","formControl","minWidth","li","fontSize","SelectBox","classes","open","setOpen","response","disabled","locked","InputLabel","Select","labelId","onClose","onOpen","indexOf","returnAnketsAnswer","MenuItem","paddingBottom","Scatter","color","partyColor","axises","names","symbolSize","data","type","symbol","emphasis","show","formatter","position","push","myAxis","fontWeight","style","height","option","legend","orient","top","left","grid","z","bottom","xAxis","min","max","yAxis","series","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","provider","auth","GoogleAuthProvider","signInWithGoogle","signInWithPopup","signInAnonymously","FacebookShareBtn","indexLegends","legends","Object","values","filter","undefined","FacebookShareButton","url","compass_url","quote","join","FacebookIcon","size","ScatterLine","distanceIs","minDistance","Infinity","distance","require","partyAxises","partyAxis","axisAverrage","textAlign","axisName","parseFloat","toFixed","axisPoints","minus","plus","aria-role","width","axisNearest","PartyImage","src","partyName","alt","PrecentOfAnswered","lengthQuestion","lenQuestions","precentOfAnswered","currentQuestions","Math","ceil","queryString","Home","state","questions","main_title","gateway","notAnswered","axis_points","total_axis","axis_title_values","axis_values","axis","axis_title","axises_object","axis_names","all_axis","answer_title_values","answer_values","answer_values_males","count_axises","compass_compare","default_axises","all_axis_averrage","batch_axises","onlyTwoCheckBox","showAnswers","questions_on_page","first_questions","anket","anket_all_answers","anketa_questions","anket_answers","axis_legends","legendary","nearestParty","saveData","uid","user","downloadData","urlString","parse","window","location","search","decode","console","log","fetch","then","json","setState","uploadData","method","mode","body","JSON","stringify","headers","success","catch","error","getNotAnswered","pl","elToIntArr","array","forEach","Number","currentQset","slice","idxsOfAnswered","keys","answer","axis_name","getAxisMainTemplate","mainTemplate","length","assign","getAxisTemplate","axis_index","axis_object","template","entries","item","reverse","returnAxis","getAxis","index_question","state_answers","axises_names","axis_count","axs","answer_type","answer_type_index","answer_index","axis_type","axis_type_index","axis_is","sort","Set","difference","lastIndexOf","getAxisAverage","sum","distanceEuclid","positionInfo","axises_object_keys","axises_object_values","axises_idx","item_index","default_axis","axis_idx","idx","legendByAxis","legendsByAxis","legendIs","itIs","indexAxisByName","saving_data","answ","answerIdx","part","male","old","distric","axises_averrage","db","firestore","collection","currentUser","onAuthStateChanged","doc","set","signInWithGoogleUser","this","questionList","type_answers","index_type","checkbox","topFunction","document","scrollTop","documentElement","nextAndScrollTop","whichNotAnswered","getElementById","scrollIntoView","behavior","block","previousAndScrollTop","userIs","onClick","result","d","minIs","partyLink","parties_image_name","href","about_parties","resultParty","axisesNames","chart","forms","Component","App","ReactGa","initialize","pageview","pathname","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30a76c74.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport \"../../App.css\"\n\n\nexport default function RadioButton(props) {\n\tconst [value, setValue] = React.useState('');\n\tconst index = props.index\n\tconst {ans} = props\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value)\n\t\tprops.returnAnswer(event.target.value, index)\n\t};\n\n\tuseEffect(() => {\n\t\tif (ans){\n\t\t\tsetValue(ans)\n\t\t}\n\t}, {ans})\n\n\treturn (\n\t\t<div id={props.id}>\n\t\t\t<h4 className=\"question_title\">{props.title}</h4>\n\t\t\t<FormControl const='fieldset'>\n\t\t\t\t<RadioGroup aria-label={props.title}  name={props.title} value={value} onChange={handleChange}>\n\t\t\t\t\t{props.answers.map((el, i) => <FormControlLabel className=\"question_item\" key={i} value={el} control={<Radio/> } label={el}/>)}\n\t\t\t\t</RadioGroup>\n\t\t\t\t<div className=\"chooseAnswer padding_margin\">\n\t\t\t\t\t<p>{props.message}</p>\n\t\t\t\t</div>\n\t\t\t</FormControl>\n\t\t</div>\n\t)\n\t\t;\n}","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport \"../../App.css\"\n\nexport default function CheckBox(props) {\n\tconst [value, setValue] = React.useState(false)\n\tconst index = props.index\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.checked)\n\t\tprops.returnAxisName(event.target.checked, index)\n\t}\n\n\treturn (\n\t\t\t<FormGroup>\n\t\t\t\t<FormControlLabel\n\t\t\t\t\tcontrol={<Checkbox className=\"question_item\" checked={value} onChange={handleChange} key={props.key}\n\t\t\t\t\t                   value={props.name}/>}\n\t\t\t\t\tlabel={props.title}\n\t\t\t\t/>\n\t\t\t</FormGroup>\n\t)\n}","import React, { useEffect } from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport \"../../App.css\"\n\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tminWidth: 120,\n\t},\n\tli:{\n\t\tfontSize:\"15px\",\n\t}\n}));\n\nexport default function SelectBox(props) {\n\tconst classes = useStyles();\n\tconst [value, setValue] = React.useState('');\n\tconst [open, setOpen] = React.useState(false);\n\n\tconst {index, response} = props\n\n\tuseEffect(() => {\n\t\tif (response) {\n\t\t\tsetValue(response)\n\t\t}\n\t}, [response])\n\n\tconst handleChange = (event) => {\n\t\tsetValue(event.target.value);\n\t\tlet id = props.answers.indexOf(event.target.value)\n\t\tprops.returnAnketsAnswer(event.target.value, index)\n\t};\n\n\tconst handleClose = (event) => {\n\t\tsetOpen(false)\n\t};\n\n\tconst handleOpen = (event) => {\n\t\tsetOpen(true)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h4 className={\"question_title\"}>{props.title}</h4>\n\t\t\t<FormControl className={classes.formControl} disabled={props.locked ? true : false}>\n\t\t\t\t<InputLabel id=\"controlled-open-select-label\">Выбрать</InputLabel>\n\t\t\t\t<Select\n\t\t\t\t\tlabelId=\"controlled-open-select-label\"\n\t\t\t\t\tid={\"select\" + index}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonClose={handleClose}\n\t\t\t\t\tonOpen={handleOpen}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={handleChange}>\n\t\t\t\t\t{props.answers.map((el, i) => <MenuItem className={classes.li} key={i} value={el.value}>{el.name}</MenuItem>)}\n\t\t\t\t</Select>\n\t\t\t</FormControl>\n\t\t</div>\n\t)\n\n}","import React from 'react';\nimport ReactEcharts from \"echarts-for-react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport 'echarts-gl';\nimport \"../../App.css\"\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\tpaddingBottom: 0,\n\t},\n}));\n\nexport default function Scatter(props) {\n\tconst classes = useStyles();\n\tconst color = props.partyColor\n\tlet axises = props.axises.map((el, i) => {\n\t\tlet partyAxis = {\n\t\t\tname: props.names[i],\n\t\t\tsymbolSize: 12,\n\t\t\tdata: [el],\n\t\t\ttype: 'scatter',\n\t\t\tsymbol: 'circle',\n\t\t\tcolor: color[i],\n\t\t\temphasis: {\n\t\t\t\tlabel: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tformatter: props.names[i],\n\t\t\t\t\tposition: 'top'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn partyAxis\n\t})\n\n\taxises.push({\n\t\tsymbolSize: 22,\n\t\tdata: [props.myAxis],\n\t\ttype: 'scatter',\n\t\tsymbol: \"diamond\",\n\t\tname: \"Я\",\n\t\tcolor: 'red',\n\t\tlabel: {\n\t\t\tshow: true,\n\t\t\tposition: 'top',\n\t\t\tformatter: \"Я\",\n\t\t\tfontWeight: \"bold\"\n\n\t\t}\n\t})\n\n\tconst getOption = () => ({\n\t\tcolor: color,\n\t\tlegend: {\n\t\t\tshow: true,\n\t\t\tdata: props.names,\n\t\t\torient: \"horizontal\",\n\t\t\theight: 'auto',\n\t\t\ttop: \"3%\",\n\t\t\tleft: 0,\n\t\t},\n\t\tgrid: {\n\t\t\tz: 2,\n\t\t\ttop: \"30%\",\n\t\t\theight: \"50%\",\n\t\t\tbottom: \"10%\"\n\t\t},\n\t\txAxis: {\n\t\t\tname: 'x',\n\t\t\tmin: -2,\n\t\t\tmax: 2,\n\n\t\t},\n\t\tyAxis: {\n\t\t\tname: 'y',\n\t\t\tmin: -2,\n\t\t\tmax: 2,\n\n\t\t},\n\t\tseries: axises\n\t})\n\treturn (\n\t\t<div className={classes.formControl}>\n\t\t\t\t\t<ReactEcharts style={{height: \"550px\"}} option={getOption()}/>\n\t\t</div>\n\t);\n}","import firebase from 'firebase';\n\nconst firebaseConfig = {\n\t\tapiKey: \"AIzaSyAsHkL31D3SoLKJB7KckZJhP-5OeAKEr24\",\n    authDomain: \"politicalcompass-ab7db.firebaseapp.com\",\n    databaseURL: \"https://politicalcompass-ab7db.firebaseio.com\",\n    projectId: \"politicalcompass-ab7db\",\n    storageBucket: \"politicalcompass-ab7db.appspot.com\",\n    messagingSenderId: \"784296265940\",\n    appId: \"1:784296265940:web:37d3c65879cb09cebe5341\",\n    measurementId: \"G-47ZKW7PQ4L\"\n}\nfirebase.initializeApp(firebaseConfig);\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n\tfirebase.auth().signInWithPopup(provider);\n};\n\nexport const signInAnonymously = () => {\n\tfirebase.auth().signInAnonymously()\n}\n\nexport default firebase;","import React from \"react\";\nimport {\n\tFacebookShareButton,\n\tFacebookIcon,\n} from \"react-share\";\nimport \"../../App.css\"\n\nexport default function FacebookShareBtn(props) {\n\tlet message = props.indexLegends.map((el, i) =>{\n\t\tif (props.legends[i].name==\"Матраимовы\" || props.legends[i].name==\"Жээнбеков\") {\n\t\t\tlet legend = Object.values(props.legends[i])[el]\n\n\t\t\treturn legend\n\t\t}\n\t})\n\n\tmessage = message.filter(el => el!=undefined)\n\treturn (\n\t\t\t<FacebookShareButton\n\t\t\t\t\t\tclassName={'fb'}\n\t\t\t\t\t\turl={props.compass_url}\n\t\t\t\t\t\tquote={message.join(' ')+\"\\n\\n\"+`Узнай, какие кыргызские партии солидарны с моей и с твоей позицией:${props.compass_url}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<FacebookIcon\n\t\t\t\t\t\t\t\tsize={\"2.1rem\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<p>Поделиться результатом</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</FacebookShareButton>\n\t)\n}","import React from 'react';\nimport ReactEcharts from \"echarts-for-react\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport 'echarts-gl';\nimport \"../../App.css\"\n\nconst useStyles = makeStyles((theme) => ({\n\tformControl: {\n\t\theight: 60,\n\t},\n}));\n\nexport default function ScatterLine(props) {\n\tconst classes = useStyles()\n\tlet distanceIs;\n\tlet minDistance = Infinity\n\tlet position;\n\tlet distance = require('euclidean-distance')\n\tconst partyColor = props.partyColor\n\n\tlet axises = props.partyAxises.map((el, i) => {\n\t\tlet partyAxis = {\n\t\t\tname: props.names[i],\n\t\t\tsymbolSize: 12,\n\t\t\tdata: [[el[props.index], 0]],\n\t\t\ttype: 'scatter',\n\t\t\tsymbol: \"circle\",\n\t\t\tcolor: partyColor[i],\n\t\t\temphasis: {\n\t\t\t\tlabel: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tformatter: props.names[i],\n\t\t\t\t\tposition: 'top'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t//get min distance\n\t\tdistanceIs = distance([props.axisAverrage, 0], [el[props.index], 0])\n\t\tif (distanceIs < minDistance) {\n\t\t\tminDistance = distanceIs;\n\n\t\t\tposition = {\n\t\t\t\tdistance: minDistance,\n\t\t\t\ttitle: props.names[i],\n\t\t\t}\n\t\t}\n\n\t\treturn partyAxis\n\t})\n\n\taxises.push({\n\t\tsymbolSize: 22,\n\t\tdata: [[props.axisAverrage, 0]],\n\t\ttype: 'scatter',\n\t\tcolor: 'red',\n\t\tsymbol: \"diamond\",\n\t\tlabel: {\n\t\t\tshow: true,\n\t\t\tposition: 'top',\n\t\t\tformatter: \"Я\",\n\t\t\tfontWeight: \"bold\"\n\n\t\t},\n\t\temphasis: {\n\t\t\tlabel: {\n\t\t\t\tshow: true,\n\t\t\t\tformatter: \"Я\",\n\t\t\t\tposition: 'top'\n\t\t\t}\n\t\t}\n\t})\n\n\n\tconst getOption = () => ({\n\t\tcolor: partyColor,\n\t\tlegend: {\n\t\t\tdata: props.names,\n\t\t\torient: \"horizontal\",\n\t\t\tbottom: \"0%\",\n\t\t\twidth: \"100%\",\n\t\t},\n\t\txAxis: {\n\t\t\tmin: -2,\n\t\t\tmax: 2,\n\t\t},\n\t\tyAxis: {\n\t\t\tshow: false\n\t\t},\n\t\theight: 0,\n\t\tseries: axises,\n\t})\n\n\treturn (\n\t\t<div className='scatter-line'>\n\t\t\t<div className={\"nameAxis\"}>\n\t\t\t\t<h5 style={{textAlign: \"center\"}}>{props.axisName}: {parseFloat(props.axisAverrage).toFixed(2)}</h5>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<div className={\"decision\"}>\n\t\t\t\t\t<p className={\"minus\"}>\n\t\t\t\t\t\t{props.axisPoints.minus}<br/>\n\t\t\t\t\t</p>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p className={\"plus\"}>{props.axisPoints.plus}<br/>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className={\"arrows\"}>\n\t\t\t\t\t<i className=\"em em-arrow_left\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\n\t\t\t\t\t<i className=\"em em-arrow_right\" aria-role=\"presentation\" aria-label=\"LEFTWARDS BLACK ARROW\"></i>\n\t\t\t\t</div>\n\t\t\t\t<ReactEcharts style={{height: \"250px\"}} className={`scatter`} option={getOption()}/>\n\t\t\t</div>\n\t\t\t<h4>{props.axisNearest} — \"{position.title}\"</h4>\n\t\t</div>\n\t)\n}","import React from \"react\";\n\nexport default function PartyImage(props){\n\treturn <img src={`https://kloop.kg/wp-content/uploads/2020/09/${props.partyName}.png`} alt={props.partyName}/>\n\t}","import React, {useEffect} from \"react\";\nimport \"../../App.css\"\n\n\nexport default function PrecentOfAnswered(props){\n\tconst lengthQuestion = props.lenQuestions\n\tconst current = props.currentQuestions;\n\n\tconst precentOfAnswered = (current*100)/lengthQuestion\n\treturn(\n\t\t<div style={{textAlign:\"center\"}}>\n\t\t\t<h4 className=\"question_title\">\n\t\t\t\tВы заполнили компас на {Math.ceil(precentOfAnswered)}%\n\t\t\t</h4>\n\t\t</div>\n\t)\n}","import React, {Component, useEffect, useState} from \"react\";\nimport '../../App.css'\nimport RadioButton from \"../form/radiobutton\";\nimport CheckBox from \"../form/checkBox\";\nimport SelectBox from \"../form/SelectBox\";\nimport Scatter from \"../Charts/Scatter\";\nimport firebase from \"../../util/firebase\";\nimport FacebookShareBtn from \"../shareBtn/facebookShare\";\nimport app, {signInWithGoogle, signInAnonymously} from \"../../util/firebase\";\nimport ScatterLine from \"../axisAverrage/ScatterLineResult\";\nimport PartyImage from \"../component/PartyImage\";\nimport PrecentOfAnswered from \"../axisAverrage/PrecentOfAnswered\";\n\nlet distance = require('euclidean-distance')\n\n\nconst queryString = require('query-string')\n\nclass Home extends Component {\n\tstate = {\n\t\tquestions: [],\n\t\tmain_title: '',\n\t\tgateway: '',\n\t\tanswers: {},\n\t\tnotAnswered: [],\n\t\taxises: {},\n\t\taxis_points: [],\n\t\ttotal_axis: [],\n\t\taxis_title_values: [],\n\t\taxis_values: [],\n\t\tposition: {},\n\t\taxis: [],\n\t\taxis_title: [],\n\t\taxises_object: [],\n\t\taxis_names: {},\n\t\tall_axis: {},\n\t\tanswer_title_values: [],\n\t\tanswer_values: [\"da\"],\n\t\tanswer_values_males: [],\n\t\tcount_axises: [],\n\t\tcompass_compare: {},\n\t\tdefault_axises: [],\n\t\tall_axis_averrage: [],\n\t\tbatch_axises: [],\n\t\tonlyTwoCheckBox: true,\n\t\tshowAnswers: false,\n\t\tquestions_on_page: 0,\n\t\tfirst_questions: 0,\n\t\tpartyColor: [],\n\t\tanket: false,\n\t\tanket_all_answers: 1,\n\t\tanketa_questions: [],\n\t\tanket_answers: [],\n\t\taxis_legends: [],\n\t\tlegendary: [],\n\t\tnearestParty: {},\n\t\tcompass_url: \"\",\n\t\tsaveData: false,\n\t\tuid: false,\n\t\tuser: false,\n\t\taxisNearest: []\n\n\t}\n\n\n\tcomponentDidMount() {\n\t\tthis.downloadData()\n\t}\n\n\tdownloadData = () => {\n\t\tlet urlString = queryString.parse(window.location.search, {decode: false})\n\t\tconsole.log(urlString)\n\t\tif (true) {\n\t\t\t// fetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/final_config_test_0.json')\n\t\t\t\tfetch('https://raw.githubusercontent.com/Kabirov7/kloop-forms-test/master/config_plus_test_and_anketa.json')\n\t\t\t\t// if (urlString.url) {\n\t\t\t\t// \tfetch(urlString.url)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconsole.log(\"RESPONSE\", response)\n\t\t\t\t\treturn response.json();\n\t\t\t\t})\n\t\t\t\t.then((data) => {\n\t\t\t\t\tconsole.log(\"DATA\", data);\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tquestions: data.questions,\n\t\t\t\t\t\tmain_title: data.main_title,\n\t\t\t\t\t\tgateway: data.gateway,\n\t\t\t\t\t\tcompass_compare: data.compass_compare,\n\t\t\t\t\t\taxis: data.axises,\n\t\t\t\t\t\taxis_title: data.axis_title,\n\t\t\t\t\t\taxis_title_values: data.axis_title_values,\n\t\t\t\t\t\taxis_values: data.axis_values,\n\t\t\t\t\t\tanswer_title_values: data.answer_title_values,\n\t\t\t\t\t\tanswer_values_males: data.answer_values,\n\t\t\t\t\t\taxises_object: data.axises_object,\n\t\t\t\t\t\tquestions_on_page: data.questions_on_page,\n\t\t\t\t\t\taxis_points: data.axis_points,\n\t\t\t\t\t\tpartyColor: data.partyColor,\n\t\t\t\t\t\tanketa_questions: data.anket,\n\t\t\t\t\t\taxis_legends: data.axis_legends,\n\t\t\t\t\t\tcompass_url: data.compass_url,\n\t\t\t\t\t\taxisNearest: data.axisNearest,\n\t\t\t\t\t})\n\t\t\t\t});\n\t\t} else {\n\t\t\tconsole.log(\"ERROR: no url detected\")\n\t\t}\n\t}\n\n\tuploadData = (data) => {\n\t\tfetch(this.state.gateway, {\n\t\t\tmethod: 'POST',\n\t\t\tmode: 'no-cors',\n\t\t\tbody: JSON.stringify(data),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n\t\t}).then(\n\t\t\tresponse => response.json()\n\t\t).then(\n\t\t\tsuccess => console.log(success)\n\t\t).catch(\n\t\t\terror => {\n\t\t\t\tconsole.log(\"Error\", error)\n\t\t\t\tthis.setState({showAnswers: true})\n\t\t\t}\n\t\t);\n\t}\n\n\tgetNotAnswered = (state, pl) => {\n\n\t\tfunction elToIntArr(array) {\n\t\t\tarray.forEach((i, index) => {\n\t\t\t\tarray[index] = Number(array[index])\n\t\t\t})\n\t\t\treturn array\n\t\t}\n\n\t\tlet currentQset;\n\t\tif (pl == \"plus\") {\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page);\n\t\t} else if (pl == 'minus') {\n\t\t\tcurrentQset = this.state.questions.slice(this.state.first_questions, this.state.first_questions - this.state.questions_on_page);\n\t\t}\n\n\n\t\tlet idxsOfAnswered = elToIntArr(Object.keys(state.answers))\n\t\tcurrentQset = elToIntArr(Object.keys(currentQset))\n\n\t\tlet whichNotAnswered = currentQset.filter((i) => idxsOfAnswered.indexOf(this.state.first_questions + i) == -1);\n\n\t\treturn whichNotAnswered\n\t}\n\n\treturnAnswer = (answer, index) => {\n\t\tlet answers = {...this.state.answers}\n\t\tanswers[index] = answer\n\t\tthis.setState({answers: answers})\n\t}\n\n\treturnAnketsAnswer = (answer, index) => {\n\t\tlet answers = {...this.state.anket_answers}\n\t\tanswers[index] = answer\n\t\tthis.setState({anket_answers: answers})\n\t}\n\n\treturnAxisName = (axis_name, index) => {\n\t\tlet axises = {...this.state.axis_names}\n\t\taxises[index] = axis_name\n\t\tthis.setState({axis_names: axises})\n\t}\n\n\tgetAxisMainTemplate = (state) => {\n\t\tlet mainTemplate;\n\t\tfor (let i = 0; i < state.axises_object.length + 1; i++) {\n\t\t\tmainTemplate = Object.assign({}, state.axises_object[i], state.axises_object[i + 1], mainTemplate)\n\t\t}\n\t\treturn mainTemplate;\n\t}\n\n\tgetAxisTemplate = (state) => {\n\t\tlet axis_names = [];\n\t\tlet axis, axis_index, axis_object;\n\t\tlet all_axis;\n\t\tlet template = Object.entries(state.axis_names).map((item) => {\n\t\t\taxis = item[1]\n\t\t\taxis_index = item[0]\n\t\t\taxis_object = state.axises_object[axis_index]\n\t\t\tif (axis) {\n\t\t\t\taxis_names.push(axis_object)\n\t\t\t\treturn axis_object\n\t\t\t}\n\t\t})\n\n\t\ttemplate = template.filter(item => item !== undefined)\n\t\ttemplate = template.reverse()\n\t\tfor (let i = 0; i < template.length + 1; i++) {\n\t\t\tif (i != template.length) {\n\t\t\t\tall_axis = Object.assign({}, template[i], template[i + 1], all_axis)\n\t\t\t}\n\t\t}\n\t\treturn all_axis;\n\t\tthis.setState({all_axis: all_axis})\n\t}\n\n\treturnAxis = (axis) => {\n\t\tlet axises = {...this.state.axises}\n\t\taxises = axis\n\t\tthis.setState({axises: axises})\n\t}\n\n\tgetAxis = (state) => {\n\t\tlet state_answers = Object.entries(state.answers);\n\n\t\tlet axises_names = [];\n\t\tlet axis_count = {};\n\t\tlet answer, index_question;\n\n\t\tlet axs = state_answers.map((item, index, array) => {\n\t\t\tindex_question = item[0]\n\t\t\tanswer = item[1]\n\t\t\tlet answer_type = state.questions[index_question].answer;\n\t\t\tlet answer_type_index = state.answer_title_values.indexOf(answer_type)\n\t\t\tlet answers_item = state.answer_values_males[answer_type_index][state.anket_answers[0]]\n\t\t\tlet answer_index = answers_item.indexOf(answer)\n\n\t\t\tlet axis_type = state.questions[index_question].axis;\n\t\t\tlet axis_type_index = state.axis_title_values.indexOf(axis_type)\n\t\t\tlet axis_array = state.axis_values[axis_type_index]\n\t\t\tlet axis_is = axis_array[answer_index]\n\n\t\t\tObject.keys(axis_is).forEach((i) => {\n\t\t\t\taxises_names.push(i)\n\t\t\t})\n\n\t\t\treturn axis_is;\n\t\t})\n\t\taxises_names = axises_names.sort()\n\t\tlet unique_axis = [...new Set(axises_names)];\n\t\tunique_axis.forEach((item, index) => {\n\t\t\tlet difference = (axises_names.lastIndexOf(item) + 1) - axises_names.indexOf(item)\n\t\t\taxis_count[item] = difference\n\t\t})\n\n\t\tthis.returnAxis(axs);\n\t\tthis.getAxisAverage(axs, axis_count);\n\t};\n\n\tgetAxisAverage = (axs, axis_count) => {\n\t\tconst sum = this.getAxisTemplate(this.state)\n\t\tconst mainTemplate = this.getAxisMainTemplate(this.state)\n\n\t\tObject.values(axs).forEach(el => {\n\t\t\tObject.keys(el).forEach(key => {\n\n\t\t\t\tmainTemplate[key] += el[key]\n\t\t\t\tif (sum != undefined) {\n\t\t\t\t\tif (sum[key] !== undefined) {\n\t\t\t\t\t\tsum[key] += el[key]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\n\n\t\tObject.keys(axis_count).forEach(key => {\n\t\t\tmainTemplate[key] = mainTemplate[key] / axis_count[key]\n\t\t})\n\n\t\tif (sum != undefined) {\n\t\t\tObject.keys(sum).forEach(key => {\n\t\t\t\tif (axis_count[key] !== undefined) {\n\t\t\t\t\tsum[key] = sum[key] / axis_count[key]\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.setState({all_axis_averrage: Object.values(mainTemplate).reverse()})\n\t\tif (sum != undefined) {\n\t\t\tthis.distanceEuclid(sum)\n\t\t}\n\t}\n\n\tdistanceEuclid = (axises_object) => {\n\t\tlet distanceIs;\n\t\tlet minDistance = Infinity;\n\t\tlet axises = [];\n\t\tconst minDistances = [];\n\n\t\tlet positionInfo = {\n\t\t\tdistance: Infinity,\n\t\t\ttitle: Infinity,\n\t\t}\n\n\t\tlet axises_object_keys = Object.keys(axises_object);//keys of choosen axises\n\t\tlet axises_object_values = Object.values(axises_object);// values of choosen axises\n\t\tconst axises_idx = [];\n\n\n\t\tlet default_axises = [];\n\t\twhile (default_axises.length < this.state.compass_compare.axises.length) {\n\t\t\tdefault_axises.push([])\n\t\t}\n\n\t\taxises_object_keys.forEach((el, i) => {\n\t\t\taxises[i] = axises_object_values[i]\n\t\t\taxises_idx[i] = this.state.axis.indexOf(el)\n\t\t})\n\n\t\tthis.state.compass_compare.axises.map((item, item_index) => {\n\t\t\tlet default_axis = []\n\t\t\twhile (default_axis.length < axises_idx.length) {\n\t\t\t\tdefault_axis.push(0)\n\t\t\t}\n\t\t\taxises_idx.forEach((axis_idx, idx) => {\n\t\t\t\tdefault_axis[idx] = item[axis_idx]\n\t\t\t})\n\n\t\t\tdefault_axises[item_index] = default_axis\n\t\t})\n\n\t\tthis.setState({batch_axises: default_axises})\n\t\tthis.setState({total_axis: axises})\n\t\tif (axises.length != [0].length) {\n\t\t\tdefault_axises.forEach((item, index, array) => {\n\t\t\t\tdistanceIs = distance(axises, item);\n\t\t\t\tif (distanceIs < minDistance) {\n\t\t\t\t\tminDistance = distanceIs;\n\n\t\t\t\t\tpositionInfo = {\n\t\t\t\t\t\tdistance: minDistance,\n\t\t\t\t\t\ttitle: this.state.compass_compare.position[index],\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setState({position: positionInfo})\n\t\t\t})\n\t\t}\n\t}\n\n\tlegendByAxis = () => {\n\t\tlet legendsByAxis = []\n\t\tlet legendIs = this.state.axis_legends.map((el, i) => {\n\t\t\tlet itIs;\n\n\t\t\tlet legends = Object.values(el)\n\t\t\tlet indexAxisByName = this.state.axis_title.indexOf(el.name)\n\t\t\tlet axis = this.state.all_axis_averrage[indexAxisByName]\n\t\t\tif (-2 <= axis && axis < -1.11) {\n\t\t\t\titIs = 1\n\n\t\t\t} else if (-1.10 < axis && axis < -0.61) {\n\t\t\t\titIs = 2\n\n\t\t\t} else if (-0.60 < axis && axis < -0.21) {\n\t\t\t\titIs = 3\n\n\t\t\t} else if (-0.20 < axis && axis < 0.20) {\n\t\t\t\titIs = 4\n\n\t\t\t} else if (0.21 < axis && axis < 0.60) {\n\t\t\t\titIs = 5\n\n\t\t\t} else if (-0.61 < axis && axis < 1.10) {\n\t\t\t\titIs = 6\n\n\t\t\t} else if (-1.11 < axis && axis <= 2.00) {\n\t\t\t\titIs = 7\n\n\t\t\t}\n\n\t\t\tlegendsByAxis[i] = itIs\n\t\t\treturn (<div className={\"legend\"}>\n\t\t\t\t<h5>{el.name}:</h5>\n\t\t\t\t<p>{legends[itIs]}</p>\n\t\t\t</div>)\n\t\t})\n\n\t\tif (this.state.legendary.length == [].length) {\n\t\t\tthis.setState({legendary: legendsByAxis})\n\t\t}\n\t\treturn legendIs\n\t}\n\n\tsaving_data = (state) => {\n\t\tconst answ = state.answer_values_males[0][state.anket_answers[0]]\n\n\t\tlet answers = Object.values(state.answers).map((el, i) => {\n\t\t\tlet answerIdx = answ.indexOf(el)\n\t\t\treturn {[i]: answerIdx}\n\t\t})\n\n\t\tlet part = {\n\t\t\tmale: state.anket_answers[0],\n\t\t\told: state.anket_answers[1],\n\t\t\tdistric: state.anket_answers[2],\n\t\t\tanswers: answers,\n\t\t\taxises_averrage: state.all_axis_averrage,\n\t\t\taxises: state.axises,\n\t\t}\n\n\t\tconst db = firebase.firestore().collection(\"users_answers\")\n\t\tlet uid;\n\t\tlet user = firebase.auth().currentUser\n\t\tif (this.state.saveData == false) {\n\n\t\t\tfirebase.auth().onAuthStateChanged(function (user) {\n\t\t\t\tif (user != null) {\n\t\t\t\t\tuid = user.uid\n\t\t\t\t\tdb.doc(uid).collection('answers').doc().set(part)\n\n\t\t\t\t} else if (user == null) {\n\t\t\t\t\tsignInAnonymously()\n\t\t\t\t}\n\n\t\t\t});\n\t\t\tthis.setState({saveData: true})\n\t\t}\n\n\t}\n\n\tsignInWithGoogleUser = () => {\n\t\tfirebase.auth().onAuthStateChanged(function (user) {\n\t\t\tsignInWithGoogle()\n\n\t\t})\n\n\t\tthis.setState({user: true})\n\n\t}\n\n\trender() {\n\n\t\tlet qSet = this.state.questions.slice(this.state.first_questions, this.state.first_questions + this.state.questions_on_page)\n\t\tlet questionList = qSet.map((el, i) => {\n\t\t\tlet message;\n\t\t\tif (el.type === 'select') {\n\t\t\t\tif (this.state.notAnswered.indexOf(i) != -1) {\n\t\t\t\t\tmessage = 'Вам следует ответить на этот вопрос'\n\t\t\t\t} else {\n\t\t\t\t\tmessage = ''\n\t\t\t\t}\n\n\t\t\t\tlet type_answers = el.answer;\n\t\t\t\tlet title_values = this.state.answer_title_values;\n\t\t\t\tlet index_type = title_values.indexOf(type_answers);\n\t\t\t\tlet answer = this.state.answer_values_males[index_type][this.state.anket_answers[0]]\n\t\t\t\treturn (\n\t\t\t\t\t<RadioButton ans={this.state.answers[this.state.first_questions + i]}\n\t\t\t\t\t             key={this.state.first_questions + i} id={i} index={this.state.first_questions + i}\n\t\t\t\t\t             title={el.title}\n\t\t\t\t\t             message={message} answers={answer} returnAnswer={this.returnAnswer}/>\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\n\t\tlet axisAverrage = this.state.axis_title.map((el, i) => {\n\t\t\tif (el != \"Внутренняя политика\") {\n\t\t\t\treturn (<ScatterLine index={i}\n\t\t\t\t                     axisName={el}\n\t\t\t\t                     names={this.state.compass_compare.position}\n\t\t\t\t                     partyAxises={this.state.compass_compare.axises}\n\t\t\t\t                     partyColor={this.state.partyColor}\n\t\t\t\t                     axisNearest={this.state.axisNearest[i]}\n\t\t\t\t                     axisAverrage={this.state.all_axis_averrage[i]}\n\t\t\t\t                     axisPoints={this.state.axis_points[i]}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t})\n\n\t\tlet checkbox = this.state.axis.map((el, i) => {\n\t\t\tif (el != \"b\") {\n\t\t\t\treturn (\n\t\t\t\t\t<CheckBox key={i} index={i} name={el} title={this.state.axis_title[i]} returnAxisName={this.returnAxisName}/>\n\t\t\t\t)\n\t\t\t}\n\n\t\t})\n\n\t\tlet chart = () => {\n\t\t\tif (this.state.axises != {}) {\n\t\t\t\tlet axisesNames = this.state.axis_names\n\n\t\t\t\tObject.keys(axisesNames).forEach(function (key) {\n\t\t\t\t\tif (axisesNames[key] == false)\n\t\t\t\t\t\tdelete axisesNames[key];\n\t\t\t\t});\n\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Scatter partyColor={this.state.partyColor} myAxis={this.state.total_axis}\n\t\t\t\t\t\t\t         names={this.state.compass_compare.position}\n\t\t\t\t\t\t\t         axises={this.state.batch_axises}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<p className={'scatter'}>Ось X — {this.state.axis_title[Object.keys(axisesNames)[0]]}</p>\n\t\t\t\t\t\t<p className={'scatter'}>Ось Y — {this.state.axis_title[Object.keys(axisesNames)[1]]}</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t)\n\n\t\t\t}\n\t\t}\n\n\t\tlet resultParty = () => {\n\t\t\tlet distanceIs;\n\t\t\tlet names = this.state.compass_compare.position\n\t\t\tlet minIs = {\n\t\t\t\tidx: \"\",\n\t\t\t\tname: \"\",\n\t\t\t\tdistance: Infinity\n\t\t\t}\n\t\t\tthis.state.compass_compare.axises.map((el, i) => {\n\t\t\t\tdistanceIs = distance(this.state.all_axis_averrage, el)\n\t\t\t\tif (distanceIs < minIs.distance) {\n\t\t\t\t\tminIs.idx = i\n\t\t\t\t\tminIs.name = names[i]\n\t\t\t\t\tminIs.distance = distanceIs\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (Object.values(this.state.nearestParty).length == Object.values({}).length) {\n\t\t\t\tthis.setState({nearestParty: minIs})\n\t\t\t}\n\t\t\treturn (<div>\n\t\t\t\t<div className={\"resultParty\"}>\n\t\t\t\t\t<h3>Ближайшая вам партия:</h3>\n\t\t\t\t\t<h3>«{minIs.name}»</h3>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={\"partyImage\"}>\n\t\t\t\t\t<PartyImage partyLink={minIs.idx} partyName={this.state.compass_compare.parties_image_name[minIs.idx]}/>\n\t\t\t\t\t<a href={this.state.compass_compare.about_parties[minIs.idx]}>Узнайте больше об этой партии</a>\n\n\t\t\t\t</div>\n\t\t\t\t<div className={\"resultParty\"}>\n\t\t\t\t\t<h3>Ваш политический автопортрет на основе ответов:</h3>\n\t\t\t\t\t<div className={\"myLegends\"}>\n\t\t\t\t\t\t{this.legendByAxis()}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className={\"facebookBtn\"}>\n\t\t\t\t\t<FacebookShareBtn\n\t\t\t\t\t\tclassName={'fb'}\n\t\t\t\t\t\tname={this.state.compass_compare.parties_image_name[minIs.idx]}\n\t\t\t\t\t\tlegends={this.state.axis_legends}\n\t\t\t\t\t\tindexLegends={this.state.legendary}\n\t\t\t\t\t\tcompass_url={this.state.compass_url}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>)\n\t\t}\n\n\t\tlet topFunction = () => {\n\t\t\tdocument.body.scrollTop = 0;\n\t\t\tdocument.documentElement.scrollTop = 0;\n\t\t}\n\n\t\tlet nextAndScrollTop = () => {\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"plus\");\n\t\t\tif (whichNotAnswered.length == 0) {\n\t\t\t\tthis.getAxis(this.state)\n\t\t\t\tthis.setState({first_questions: this.state.first_questions + this.state.questions_on_page});\n\t\t\t\tthis.setState({notAnswered: []})\n\t\t\t\ttopFunction();\n\t\t\t} else {\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\n\t\t\t\tconst el = document.getElementById(`${whichNotAnswered[0]}`)\n\t\t\t\tel.scrollIntoView({\n\t\t\t\t\tbehavior: \"smooth\",\n\t\t\t\t\tblock: \"start\"\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (Object.values(this.state.answers).length == Object.values(this.state.questions).length && Object.values(this.state.answers).length != Object.values({}).length) {\n\n\t\t\t\tthis.saving_data(this.state)\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet previousAndScrollTop = () => {\n\t\t\tlet whichNotAnswered = this.getNotAnswered(this.state, \"minus\");\n\n\t\t\tif (whichNotAnswered.length == 0) {\n\t\t\t\tthis.getAxis(this.state)\n\t\t\t\tthis.setState({first_questions: this.state.first_questions - this.state.questions_on_page});\n\t\t\t\tthis.setState({notAnswered: []})\n\t\t\t\ttopFunction();\n\t\t\t} else {\n\t\t\t\tthis.setState({notAnswered: whichNotAnswered})\n\t\t\t}\n\t\t}\n\n\t\tlet onlyTwoCheckbox = () => {\n\t\t\tlet values = Object.values(this.state.axis_names)\n\t\t\tconst countTrue = values.filter(el => el == true)\n\t\t\tif (countTrue.length == 2) {\n\t\t\t\tthis.setState({onlyTwoCheckBox: true})\n\t\t\t\tthis.getAxis(this.state)\n\t\t\t} else {\n\t\t\t\tthis.setState({onlyTwoCheckBox: false})\n\t\t\t}\n\t\t}\n\n\t\tlet anket = this.state.anketa_questions.map((el, i) => {\n\t\t\treturn <SelectBox key={i} index={i} title={el.title} answers={el.answer}\n\t\t\t                  returnAnketsAnswer={this.returnAnketsAnswer}/>\n\t\t})\n\n\n\t\tlet doneAnket = () => {\n\t\t\tif (Object.keys(this.state.anket_answers).length == this.state.anketa_questions.length) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tanket_all_answers: true,\n\t\t\t\t\tanket: true\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.setState({anket_all_answers: false})\n\t\t\t}\n\n\t\t}\n\n\t\tconst forms = () => {\n\t\t\tif (this.state.anket == false) {\n\t\t\t\tlet answers = (this.state.anket_all_answers == false) ? \"Вам следует ответить на все вопросы\" : \"\"\n\t\t\t\tlet userIs = (this.state.user == true) ? (<div className={\"enterByEmail\"}>\n\t\t\t\t\t\t<p>Вы вошли через google</p>\n\t\t\t\t\t\t<p>Теперь жмите сюда:</p>\n\t\t\t\t\t</div>) :\n\t\t\t\t\t(<div className={\"notEnterByEmail\"}>\n\t\t\t\t\t\t<p>Если хотите в будущем найти единомышленников среди других пользователей, нажмите сюда и у нас сохранятся\n\t\t\t\t\t\t\tваше имя и email:</p>\n\t\t\t\t\t\t<button className={\"signinGoogle\"} onClick={() => this.signInWithGoogleUser()}>Войти через google</button>\n\t\t\t\t\t</div>)\n\t\t\t\treturn (\n\t\t\t\t\t<div style={{textAlign: \"center\"}}>\n\t\t\t\t\t\t<p className={\"chooseAnswer padding_margin\"}>{answers}</p>\n\t\t\t\t\t\t{anket}\n\t\t\t\t\t\t<div className={\"buttons\"}>\n\t\t\t\t\t\t\t<button onClick={() => doneAnket()}>Начать</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={\"enter\"}>\n\t\t\t\t\t\t\t{userIs}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t} else if (this.state.questions.length <= this.state.first_questions && this.state.anket == true) {\n\t\t\t\tlet result = this.state.onlyTwoCheckBox ? \"\" : \"Выберите только две темы\";\n\t\t\t\tlet d = (this.state.compass_compare.axises != undefined) ? resultParty() : \"\";\n\t\t\t\treturn (<div>\n\t\t\t\t\t{d}\n\t\t\t\t\t<h2 className=\"content-center full-result\">Развёрнутые результаты:</h2>\n\t\t\t\t\t{axisAverrage}\n\t\t\t\t\t<h1 className=\"content-center moreResult\">Поиграйтесь с результатами! Выведите их на график!</h1>\n\t\t\t\t\t<h2 className=\"content-center choose3axis\">Выберите два явления, которые вы хотите отобразить:</h2>\n\t\t\t\t\t<p className=\"chooseAnswer padding_margin\">{result}</p>\n\t\t\t\t\t<div className=\"choose_axises\">\n\t\t\t\t\t\t{checkbox}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{textAlign: \"center\"}}>\n\t\t\t\t\t\t<button onClick={() => onlyTwoCheckbox()}>Показать результаты</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t{chart()}\n\t\t\t\t\t<div className={'result-position'}>\n\t\t\t\t\t\t<h3>Ближайшая вам партия по выбранным осям:</h3>\n\t\t\t\t\t\t<h2>{this.state.position.title}</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)\n\n\t\t\t} else {\n\n\t\t\t\treturn (<div>\n\t\t\t\t\t<PrecentOfAnswered lenQuestions={this.state.questions.length} currentQuestions={this.state.first_questions}/>\n\t\t\t\t\t{questionList}\n\t\t\t\t\t<div className=\"pagination\">\n\t\t\t\t\t\t<button onClick={previousAndScrollTop}>Предыдущая страница</button>\n\t\t\t\t\t\t<button onClick={nextAndScrollTop}>Следующая страница</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>)\n\n\t\t\t}\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{forms()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Home;\n","import React, {useEffect, Component} from 'react';\nimport './App.css';\n\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n} from \"react-router-dom\";\n\nimport Home from \"./Components/auth/Home\";\nimport ReactGa from \"react-ga\"\n\nfunction App(){\n\n\n\t\tuseEffect(()=>{\n\t\t\tReactGa.initialize('UA-179274271-1')\n\t\t\tReactGa.pageview(window.location.pathname + window.location.search)\n\t\t},[])\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t\t<Router>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Route exact path={\"/PoliticalCompass/\"} component={Home}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Router>\n\t\t\t</div>\n\t\t)\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}